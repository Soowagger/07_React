{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\07_React\\\\my-app\\\\src\\\\exam\\\\Exam6.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// JSX\n\n// 조건문\n\nfunction Exam6_1(props) {\n  const isLogin = props.isLogin; // 부모에게 전달받은 props 중 isLogin \n\n  // if(isLogin) {\n  //     return <h1>Welcome back!</h1>\n  // } else {\n  //     return <h1>Please sign up~</h1>\n  // }\n\n  return (\n    // 렌더링 시 조건문(if/else) 지양\n    //  - 삼항연산자\n    // 조건문(boolean) ? true일떄 값 : false일 때 값\n    isLogin ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please sign up~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 43\n    }, this)\n  );\n}\n\n// map 사용법\n_c = Exam6_1;\nexport function Exam6_2() {\n  // map : 배열에서 사용하는 js 내장 함수\n  // -> 배열의 모든 요소에 대해 주어진 함수를 호출하고\n  //    결과를 새로운 배열로 반환\n  const numbers = [1, 2, 3, 4, 5];\n  const listItems = numbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 47\n  }, this));\n}\n_c2 = Exam6_2;\nexport default Exam6_1; // 기본적으로 내보내는 컴포넌트가 Exam6_1이다.\nvar _c, _c2;\n$RefreshReg$(_c, \"Exam6_1\");\n$RefreshReg$(_c2, \"Exam6_2\");","map":{"version":3,"names":["Exam6_1","props","isLogin","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Exam6_2","numbers","listItems","map","number","_c2","$RefreshReg$"],"sources":["C:/workspace/07_React/my-app/src/exam/Exam6.js"],"sourcesContent":["// JSX\r\n\r\n// 조건문\r\n\r\nfunction Exam6_1(props) {\r\n\r\n    const isLogin = props.isLogin; // 부모에게 전달받은 props 중 isLogin \r\n\r\n    // if(isLogin) {\r\n    //     return <h1>Welcome back!</h1>\r\n    // } else {\r\n    //     return <h1>Please sign up~</h1>\r\n    // }\r\n\r\n    return (\r\n        // 렌더링 시 조건문(if/else) 지양\r\n        //  - 삼항연산자\r\n        // 조건문(boolean) ? true일떄 값 : false일 때 값\r\n        isLogin ? <h1>Welcome back</h1> : <h1>Please sign up~</h1>\r\n    )\r\n}\r\n\r\n// map 사용법\r\nexport function Exam6_2() {\r\n    // map : 배열에서 사용하는 js 내장 함수\r\n    // -> 배열의 모든 요소에 대해 주어진 함수를 호출하고\r\n    //    결과를 새로운 배열로 반환\r\n    const numbers = [1, 2, 3, 4, 5];\r\n    const listItems = numbers.map((number) => <li>{number}</li>);\r\n\r\n}\r\n\r\n\r\n\r\nexport default Exam6_1; // 기본적으로 내보내는 컴포넌트가 Exam6_1이다."],"mappings":";;AAAA;;AAEA;;AAEA,SAASA,OAAOA,CAACC,KAAK,EAAE;EAEpB,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC;;EAE/B;EACA;EACA;EACA;EACA;;EAEA;IACI;IACA;IACA;IACAA,OAAO,gBAAGC,OAAA;MAAAC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGL,OAAA;MAAAC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAElE;;AAEA;AAAAC,EAAA,GAlBST,OAAO;AAmBhB,OAAO,SAASU,OAAOA,CAAA,EAAG;EACtB;EACA;EACA;EACA,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B,MAAMC,SAAS,GAAGD,OAAO,CAACE,GAAG,CAAEC,MAAM,iBAAKX,OAAA;IAAAC,QAAA,EAAKU;EAAM;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC;AAEhE;AAACO,GAAA,GAPeL,OAAO;AAWvB,eAAeV,OAAO,CAAC,CAAC;AAAA,IAAAS,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}