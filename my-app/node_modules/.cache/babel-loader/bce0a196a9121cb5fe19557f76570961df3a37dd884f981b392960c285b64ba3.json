{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\07_React\\\\my-app\\\\src\\\\exam\\\\Exam4.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// State & Props\n\n// Props Drilling : 상태 내리꽂기 \n// - props를 통해 데이터를 전달할 때, 자식 컴포넌트에서 필요하지 않은 props를 계속해서 전달하는 행위\n// - 코드의 가독성 및 유지보수성 저하\n// -> React Context API, Redux 같은 상태 관리 라이브러리를 사용함\n\n// Exam4 > Child1 > Child2 > Child3 > MyComponent 부모자식 관계 연결\n// Exam4의 상태값을 MyComponent에서 사용해야 한다면?\n\n// 부모 컴포넌트\nfunction Exam4() {\n  const [name, setName] = userState(\"홍길동\");\n  const handleClick = () => {\n    setName(\"고길동\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Child1, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Exam4;\nfunction Child1(props) {\n  return /*#__PURE__*/_jsxDEV(Child2, {\n    name: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Child1;\nfunction Child2(props) {\n  return /*#__PURE__*/_jsxDEV(Child3, {\n    name: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Child2;\nfunction Child3(props) {\n  return /*#__PURE__*/_jsxDEV(MyComponent, {\n    name: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Child3;\nfunction MyComponent(props) {\n  // props는 Exam4에서부터 내리꽂기를 통해 전달받은 부모의 상태값\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}\n_c5 = MyComponent;\nexport default Exam4;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Exam4\");\n$RefreshReg$(_c2, \"Child1\");\n$RefreshReg$(_c3, \"Child2\");\n$RefreshReg$(_c4, \"Child3\");\n$RefreshReg$(_c5, \"MyComponent\");","map":{"version":3,"names":["Exam4","name","setName","userState","handleClick","_jsxDEV","_Fragment","children","Child1","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","props","Child2","_c2","Child3","_c3","MyComponent","_c4","_c5","$RefreshReg$"],"sources":["C:/workspace/07_React/my-app/src/exam/Exam4.js"],"sourcesContent":["// State & Props\r\n\r\n// Props Drilling : 상태 내리꽂기 \r\n// - props를 통해 데이터를 전달할 때, 자식 컴포넌트에서 필요하지 않은 props를 계속해서 전달하는 행위\r\n// - 코드의 가독성 및 유지보수성 저하\r\n// -> React Context API, Redux 같은 상태 관리 라이브러리를 사용함\r\n\r\n// Exam4 > Child1 > Child2 > Child3 > MyComponent 부모자식 관계 연결\r\n// Exam4의 상태값을 MyComponent에서 사용해야 한다면?\r\n\r\n// 부모 컴포넌트\r\nfunction Exam4() {\r\n    const [name, setName] = userState(\"홍길동\");\r\n\r\n    const handleClick = () => {\r\n        setName(\"고길동\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Child1 name={name} />\r\n            <button onClick={handleClick}>이름 변경</button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction Child1(props) {\r\n    return <Child2 name={props.name} />\r\n}\r\n\r\nfunction Child2(props) {\r\n    return <Child3 name={props.name} />\r\n}\r\n\r\nfunction Child3(props) {\r\n    return <MyComponent name={props.name} />\r\n}\r\n\r\nfunction MyComponent(props) {\r\n    // props는 Exam4에서부터 내리꽂기를 통해 전달받은 부모의 상태값\r\n    \r\n    return <h1>{props.name}</h1>\r\n}\r\n\r\n\r\nexport default Exam4;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAASA,KAAKA,CAAA,EAAG;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,SAAS,CAAC,KAAK,CAAC;EAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBF,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACIG,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA,CAACG,MAAM;MAACP,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBP,OAAA;MAAQQ,OAAO,EAAET,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC9C,CAAC;AAEX;AAACE,EAAA,GAbQd,KAAK;AAgBd,SAASQ,MAAMA,CAACO,KAAK,EAAE;EACnB,oBAAOV,OAAA,CAACW,MAAM;IAACf,IAAI,EAAEc,KAAK,CAACd;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACK,GAAA,GAFQT,MAAM;AAIf,SAASQ,MAAMA,CAACD,KAAK,EAAE;EACnB,oBAAOV,OAAA,CAACa,MAAM;IAACjB,IAAI,EAAEc,KAAK,CAACd;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACO,GAAA,GAFQH,MAAM;AAIf,SAASE,MAAMA,CAACH,KAAK,EAAE;EACnB,oBAAOV,OAAA,CAACe,WAAW;IAACnB,IAAI,EAAEc,KAAK,CAACd;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C;AAACS,GAAA,GAFQH,MAAM;AAIf,SAASE,WAAWA,CAACL,KAAK,EAAE;EACxB;;EAEA,oBAAOV,OAAA;IAAAE,QAAA,EAAKQ,KAAK,CAACd;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChC;AAACU,GAAA,GAJQF,WAAW;AAOpB,eAAepB,KAAK;AAAC,IAAAc,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}