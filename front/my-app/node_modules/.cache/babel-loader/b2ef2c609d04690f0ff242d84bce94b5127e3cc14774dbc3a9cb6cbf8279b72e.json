{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\07_React\\\\front\\\\my-app\\\\src\\\\todoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\n// TodoList.js\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  // 상태\n  const [todos, setTodos] = useState([{\n    title: \"React 복습하기\",\n    isDone: false\n  }, {\n    title: \"일기 쓰기\",\n    isDone: true\n  }]);\n  const [inputValue, setInputValue] = useState('');\n\n  // 함수\n  // 할 일 추가 함수\n  const handleAddTodo = () => {\n    // 기존의 todos 배열과 새로운 할 일 객체 이어 붙여서 새로운 배열을 만든 후,\n    // 이를 setTodos 함수를 사용하여 업데이트함.\n    setTodos([...todos, {\n      title: \"React 복습하기\",\n      isDone: false\n    }]);\n    setInputValue(\"\"); // 입력 필드에 있는 값 비워주기\n  };\n\n  // return () : 화면에 렌더링할 jsx 작성 구문\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) =>\n      /*#__PURE__*/\n      // 익명 함수는 열었을 때 return 구문이 필요함\n      // { return () } 생략한 방법 \n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: todo.isDone ? 'line-through' : 'none'\n          },\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: todo.isDone ? '미완료' : '완료'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"Xcjz/A3xDPVLfwle9AkCelIyJKU=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","title","isDone","inputValue","setInputValue","handleAddTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","todo","index","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/workspace/07_React/front/my-app/src/todoList/TodoList.js"],"sourcesContent":["// TodoList.js\r\n\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nfunction TodoList() {\r\n\r\n    // 상태\r\n    const [todos, setTodos] = useState([{title : \"React 복습하기\", isDone : false},\r\n                                        {title : \"일기 쓰기\", isDone : true}]);\r\n\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n\r\n    // 함수\r\n    // 할 일 추가 함수\r\n    const handleAddTodo = () => {\r\n\r\n        // 기존의 todos 배열과 새로운 할 일 객체 이어 붙여서 새로운 배열을 만든 후,\r\n        // 이를 setTodos 함수를 사용하여 업데이트함.\r\n        setTodos([...todos, {title : \"React 복습하기\", isDone : false}]);\r\n        setInputValue(\"\"); // 입력 필드에 있는 값 비워주기\r\n    }\r\n\r\n    // return () : 화면에 렌더링할 jsx 작성 구문\r\n    return (\r\n        <div>\r\n            <h1>TodoList</h1>\r\n            <input value={inputValue} onChange={(e) => setInputValue(e.target.value)}/>\r\n            <button onClick={handleAddTodo}>추가하기</button>\r\n            \r\n            <ul>\r\n                {\r\n                    todos.map((todo, index) => (\r\n\r\n                        // 익명 함수는 열었을 때 return 구문이 필요함\r\n                        // { return () } 생략한 방법 \r\n                        <li>\r\n                            <span style={{ textDecoration : todo.isDone ? 'line-through' : 'none'}}>\r\n                                {todo.title}\r\n                            </span>\r\n\r\n                            <button>{todo.isDone ? '미완료' : '완료'}</button>\r\n                            <button>삭제</button>\r\n                        </li>\r\n                    ))\r\n                    \r\n\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}   \r\n\r\nexport default TodoList;"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAACO,KAAK,EAAG,YAAY;IAAEC,MAAM,EAAG;EAAK,CAAC,EACtC;IAACD,KAAK,EAAG,OAAO;IAAEC,MAAM,EAAG;EAAI,CAAC,CAAC,CAAC;EAGtE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAGhD;EACA;EACA,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAExB;IACA;IACAL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAACE,KAAK,EAAG,YAAY;MAAEC,MAAM,EAAG;IAAK,CAAC,CAAC,CAAC;IAC5DE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,oBACIR,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA;MAAOe,KAAK,EAAER,UAAW;MAACS,QAAQ,EAAGC,CAAC,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3Ed,OAAA;MAAQmB,OAAO,EAAEV,aAAc;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7Cd,OAAA;MAAAU,QAAA,EAEQP,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA;MAElB;MACA;MACAtB,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAMuB,KAAK,EAAE;YAAEC,cAAc,EAAGH,IAAI,CAACf,MAAM,GAAG,cAAc,GAAG;UAAM,CAAE;UAAAI,QAAA,EAClEW,IAAI,CAAChB;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEPd,OAAA;UAAAU,QAAA,EAASW,IAAI,CAACf,MAAM,GAAG,KAAK,GAAG;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC7Cd,OAAA;UAAAU,QAAA,EAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACZ,EAAA,CAhDQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}